
DECLARE size Shared Integer 0 ;
DECLARE tmpSize Shared Integer 0 ;
DECLARE outputemm SHARED ROW;
DECLARE ns2 NAMESPACE 'http://emis.scheduling.external.ws.api.easymed.com/';

CREATE COMPUTE MODULE zzz_Compute
CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN			  
		CALL size();
		CALL  getInput();				 						 		
		if tmpSize = 0 then
		 	SET tmpSize=size;		 					
		 END if;	
		 	 					 				 					 		 			 		 		 
		 IF  tmpSize = 0  THEN 
		  		RETURN TRUE;
		 ELSE
		 DECLARE jai11 CHAR '';
		 SET jai11  = Environment.tmp.emis.patientId;
		 SET OutputRoot.XMLNSC.emis.patientid = Environment.tmp.getAgendaUpdatesList[tmpSize].emisPatientID;
		 SET OutputRoot.XMLNSC.emis.appid = Environment.tmp.getAgendaUpdatesList[tmpSize].emisAppointmentID;
		 SET OutputRoot.XMLNSC.emis.status = Environment.tmp.getAgendaUpdatesList[tmpSize].status;
		 SET outputemm =  OutputRoot;
		 
		 PROPAGATE TO TERMINAL 'out1';
		 SET tmpSize=tmpSize-1;		 
		 PROPAGATE TO TERMINAL 'out3';		
		 end IF;		
		RETURN FALSE;
	END;
	
	CREATE PROCEDURE size() 	
	BEGIN							
		SET size = CARDINALITY(InputRoot.XMLNSC.ns2:getAgendaUpdatesResponse.return.*[]);		
	END;
	
	CREATE PROCEDURE getInput() 	
	BEGIN 
		if CARDINALITY(InputRoot.XMLNSC.ns2:getAgendaUpdatesResponse.return.*[]) <> 0 then
			SET Environment.tmp = InputRoot.XMLNSC.ns2:getAgendaUpdatesResponse.return;		
		END IF ;		 								
	END;
	
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
