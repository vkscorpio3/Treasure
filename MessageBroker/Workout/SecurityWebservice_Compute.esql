DECLARE nsNotificationSchduling NAMESPACE 'http://labresult.ws.api.easymed.com/';
DECLARE ns NAMESPACE 'http://www.mycompany.com/EmployeeService';
CREATE COMPUTE MODULE SecurityWebservice_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		SET OutputRoot.XMLNSC.nsNotificationSchduling:labResultResponse.return='false';		
		RETURN TRUE;
		IF InputRoot.XMLNSC.ns:EmployeeInfoRequest.id = '12345' THEN
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.id = 
      	InputRoot.XMLNSC.ns:EmployeeInfoRequest.id;
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.ssn = '88888888';
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.employeeName.firstName = 'John';
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.employeeName.lastName = 'Doe';
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.address.street = '555 Creek Road';
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.address.city = 'NYC';
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.address.state = 'NY';
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.address.zipCode = '54321';
    ELSE
      SET OutputRoot.XMLNSC.ns:EmployeeInfoResponse.status = 
      	'The employee id '||InputRoot.XMLNSC.ns:EmployeeInfoRequest.id||' does not exist';
    END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
